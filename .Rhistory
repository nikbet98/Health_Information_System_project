df <- read.csv("./datasets/rilevazioni.csv")
View(df)
summary(df)
head(df)
df_sensori <- read.csv("./datasets/stazioni.csv")
library(dplyr)
df <- join(df,df_sensori,idSensore)
df <- Join(df,df_sensori,idSensore)
df <- inner_join(df,df_sensori,by=c("idSensore"))
df
new_df <- inner_join(df,df_sensori,by=c("idSensore"))
df_sensori
View(df_sensori)
rm(df_sensori)
df_sensori <- read.csv("./datasets/stazioni.csv")
new_df <- inner_join(df_sensori,df,by=c("idSensore"))
rm(df_sensori)
df_sensori <- read.csv("./datasets/stazioni.csv")
df |> left_join(df_sensori)
df %>% left_join(df_sensori)
left_join(df,df_sensori)
left_join(df,df_sensori,by=c("idSensore"))
View(df)
View(df_sensori)
View(df)
df %>% rename()
df %>% rename(idSensore = IdSensore)
df %>% rename(IdSensore = idSensore)
head(df)
df <- df %>% rename(IdSensore = idSensore)
head(df)
left_join(df,df_sensori,by=c("IdSensore"))
write.csv(df,"./dataset/rilevazioni.csv")
write.csv(df,"./dataset/rilevazioni.csv")
new_df <- left_join(df,df_sensori,by=c("IdSensore"))
View(new_df)
write.csv(new_df,"./dataset/df_join.csv")
write.csv(new_df,"./dataset/df_join.csv",row.names = FALSE)
write.csv(new_df,"./datasets/df_join.csv",row.names = FALSE)
load("C:/Users/nikbe/Desktop/Slide uni (magistrale)/HIS/progetto HIS/base.RData")
library(dplyr)
date <- df$Data
prova <- date[1:100]
temp <- as.POSIXct(prova, format="%d/%m/%Y %H:%M:%S")
data <- as.Date(temp)
data
time <- format(as.POSIXct(temp), format = "%H:%M:%S")
time
temp <- as.POSIXct(date, format="%d/%m/%Y %H:%M:%S")
head(temp)
data <- as.Date(temp)
time <- format(as.POSIXct(temp), format = "%H:%M:%S")
head(time)
df$Time <- time
df$Data <- data
View(df)
View(df)
write.csv('./datasets/rilevazioni.csv')
write.csv(df,'./datasets/rilevazioni.csv')
write.csv(df,'./datasets/rilevazioni2.csv')
time <- 0
temp <- 0
prova <- 0
data <-0
date <- 0
write.csv(df,'./datasets/rilevazioni2.csv')
write.csv(df,'./datasets/rilevazioni2.csv')
memory.limit(4000)
memory.size()
memory.limit(8000)
memory.limit(size=8000)
memory.size()
memory.limit(size=80000)
write.csv(df,'./datasets/rilevazioni2.csv')
summary(df)
install.packages("rmarkdown", dependencies = TRUE)
install.packages('knitr')
installed.packages()
install.packages("rmarkdown", dependencies = TRUE)
install.packages("xfun")
install.packages("rmarkdown", dependencies = TRUE)
install.packages("rmarkdown", dependencies = TRUE)
install.packages("ggplot2")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(dplyr)
library(ggplot2)
})
df <- read.csv(./datasets/sensor_readings.csv)
df <- read.csv("./datasets/sensor_readings.csv")
head(df)
df <- read.csv("./datasets/sensor_readings.csv")
head(df)
# check on the structure of the dataset
summary(df)
# check on the structure of the dataset
names(df)
# check on the structure of the dataset
summary(df)
# check how many records in the dataset are NA
table(df$Valore)
# check how many records in the dataset are NA
table(df$Stato)
# check how many records in the dataset are NA
table(df$Stato, useNA = "always")
# double check on the "Valore" field
colSums(df$Valore == -9999)
# double check on the "Valore" field
length(df$Valore == -9999)
# double check on the "Valore" field
length(df[df$Valore == -9999])
# double check on the "Valore" field
length(df $Valore[df$Valore == -9999])
# double check on the "Valore" field
length(which(df$Valore == -9999))
install.packages("tidyr")
suppressPackageStartupMessages({
library(dplyr)
library(ggplot2)
library(tidyr)
})
suppressPackageStartupMessages({
library(dplyr)
library(ggplot2)
library(tidyr)
})
df %>% drop_na()
df %>% drop_na()
table(df$Stato)
