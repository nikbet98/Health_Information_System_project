df <- read.csv("./datasets/rilevazioni.csv")
View(df)
summary(df)
head(df)
df_sensori <- read.csv("./datasets/stazioni.csv")
library(dplyr)
df <- join(df,df_sensori,idSensore)
df <- Join(df,df_sensori,idSensore)
df <- inner_join(df,df_sensori,by=c("idSensore"))
df
new_df <- inner_join(df,df_sensori,by=c("idSensore"))
df_sensori
View(df_sensori)
rm(df_sensori)
df_sensori <- read.csv("./datasets/stazioni.csv")
new_df <- inner_join(df_sensori,df,by=c("idSensore"))
rm(df_sensori)
df_sensori <- read.csv("./datasets/stazioni.csv")
df |> left_join(df_sensori)
df %>% left_join(df_sensori)
left_join(df,df_sensori)
left_join(df,df_sensori,by=c("idSensore"))
View(df)
View(df_sensori)
View(df)
df %>% rename()
df %>% rename(idSensore = IdSensore)
df %>% rename(IdSensore = idSensore)
head(df)
df <- df %>% rename(IdSensore = idSensore)
head(df)
left_join(df,df_sensori,by=c("IdSensore"))
write.csv(df,"./dataset/rilevazioni.csv")
write.csv(df,"./dataset/rilevazioni.csv")
new_df <- left_join(df,df_sensori,by=c("IdSensore"))
View(new_df)
write.csv(new_df,"./dataset/df_join.csv")
write.csv(new_df,"./dataset/df_join.csv",row.names = FALSE)
write.csv(new_df,"./datasets/df_join.csv",row.names = FALSE)
load("C:/Users/nikbe/Desktop/Slide uni (magistrale)/HIS/progetto HIS/base.RData")
library(dplyr)
date <- df$Data
prova <- date[1:100]
temp <- as.POSIXct(prova, format="%d/%m/%Y %H:%M:%S")
data <- as.Date(temp)
data
time <- format(as.POSIXct(temp), format = "%H:%M:%S")
time
temp <- as.POSIXct(date, format="%d/%m/%Y %H:%M:%S")
head(temp)
data <- as.Date(temp)
time <- format(as.POSIXct(temp), format = "%H:%M:%S")
head(time)
df$Time <- time
df$Data <- data
View(df)
View(df)
write.csv('./datasets/rilevazioni.csv')
write.csv(df,'./datasets/rilevazioni.csv')
write.csv(df,'./datasets/rilevazioni2.csv')
time <- 0
temp <- 0
prova <- 0
data <-0
date <- 0
write.csv(df,'./datasets/rilevazioni2.csv')
write.csv(df,'./datasets/rilevazioni2.csv')
memory.limit(4000)
memory.size()
memory.limit(8000)
memory.limit(size=8000)
memory.size()
memory.limit(size=80000)
write.csv(df,'./datasets/rilevazioni2.csv')
summary(df)
install.packages("rmarkdown", dependencies = TRUE)
install.packages('knitr')
installed.packages()
install.packages("rmarkdown", dependencies = TRUE)
install.packages("xfun")
install.packages("rmarkdown", dependencies = TRUE)
install.packages("rmarkdown", dependencies = TRUE)
install.packages("ggplot2")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(dplyr)
library(ggplot2)
})
df <- read.csv(./datasets/sensor_readings.csv)
df <- read.csv("./datasets/sensor_readings.csv")
head(df)
df <- read.csv("./datasets/sensor_readings.csv")
head(df)
# check on the structure of the dataset
summary(df)
# check on the structure of the dataset
names(df)
# check on the structure of the dataset
summary(df)
# check how many records in the dataset are NA
table(df$Valore)
# check how many records in the dataset are NA
table(df$Stato)
# check how many records in the dataset are NA
table(df$Stato, useNA = "always")
# double check on the "Valore" field
colSums(df$Valore == -9999)
# double check on the "Valore" field
length(df$Valore == -9999)
# double check on the "Valore" field
length(df[df$Valore == -9999])
# double check on the "Valore" field
length(df $Valore[df$Valore == -9999])
# double check on the "Valore" field
length(which(df$Valore == -9999))
install.packages("tidyr")
suppressPackageStartupMessages({
library(dplyr)
library(ggplot2)
library(tidyr)
})
suppressPackageStartupMessages({
library(dplyr)
library(ggplot2)
library(tidyr)
})
df %>% drop_na()
df %>% drop_na()
table(df$Stato)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(dplyr)
library(ggplot2)
library(tidyr)
})
df <- read.csv("./datasets/sensor_readings.csv")
head(df)
df <- drop_na(df)
dates <- df$Data
temp <- dates[1:5]
temp <- format(temp,format = "%d/%m/%Y %H:%M:%S")
temp <- format(temp,format = "%d/%m/%Y %H:%M:%S")
temp2 <- format(temp,format = "%d/%m/%Y %H:%M:%S")
temp2 <- as.Date(temp, format = "%d/%m/%Y %H:%M:%S")
temp1
temp2
temp2 <- format(as.POSIXct(temp),format = "%d/%m/%Y %H:%M:%S")
temp2 <- format(temp,format = "%Y/%m/%d %H:%M:%S")
temp2 <- as.Date(temp, format = "%d/%m/%Y %H:%M:%S")
temp3 <- format(as.POSIXct(temp), format="%H:%M:%S")
temp1 <- as.character(temp)
temp2 <- format(temp1, format="%d/%m/%Y %H:%M:%S")
temp2 <- format(temp1, format="%Y/%m/%d %H:%M:%S")
data <- "2021/05/25 12:34:25"
format(data, format="%d/%m/%Y %H:%M:%S")
format(as.POSIXct(data), format="%H:%M:%S")
data <- "25/05/2021 12:34:25"
format(data, format="%d/%m/%Y %H:%M:%S")
format(as.POSIXct(data), format="%H:%M:%S")
format(as.POSIXct(data, format="%d/%m/%Y %H:%M:%S"), format="%H:%M:%S")
format(as.POSIXct(data, format="%d/%m/%Y %H:%M:%S"))
temp1 <- as.Date(temp)
temp1
temp1 <- format(as.POSIXct(temp, format="%d/%m/%Y"))
temp2 <- format(as.POSIXct(temp, format="%H:%M:%S"))
temp2 <- format(as.POSIXct(data, format="%d/%m/%Y %H:%M:%S"), format="%H:%M:%S")
temp2 <- format(as.POSIXct(temp, format="%d/%m/%Y %H:%M:%S"), format="%H:%M:%S")
temp <- format(as.POSIXct(temp, format="%d/%m/%Y %H:%M:%S"))
temp2 <- format(as.POSIXct(temp, format="%H:%M:%S"))
temp2 <- format(as.POSIXct(temp), format = "%H:%M:%S")
temp1 <- as.Date(temp)
temp2 <- as.Date(temp, format = "%H:%M:%S")
temp2 <- format(as.POSIXct(temp), format = "%H:%M:%S")
dates <- format(as.POSIXct(dates, format="%d/%m/%Y %H:%M:%S"))
times <- format(as.POSIXct(dates), format = "%H:%M:%S")
dates <- as.Date(dates)
df$Dates <- dates
df$Times <- times
View(df)
df %>% subset(select = -Data)
df <- subset(df, select = -Data)
df <- subset(df, select = -c("idOperatore","Stato"))
df <- subset(df, select = -c(idOperatore,Stato))
write.csv(df, "./dataset/sensor_readings_cleaned.csv")
write.csv(df, "./datasets/sensor_readings_cleaned.csv")
df_stations <- read.csv("./datasets/station_dataset.csv")
View(df_stations)
table(df_stations$NomeTipoSensore)
table(df_stations$Comune)
table(df_stations$UnitaMisura)
table(df_stations$Provincia)
summary(df_stations)
str(df_stations)
colnames(df$idSensore) <- "IdSensore"
colnames(df$idSensore) <- c(IdSensore)
colnames(df$idSensore) <- c("IdSensore")
rename(df,"idSensore" = "IdSensore")
rename(df,"IdSensore" = "idSensore")
View(df)
df <- rename(df,"IdSensore" = "idSensore")
ids <- df$IdSensore
for (id in ids){
if (id !in (df_stations$IdSensore)){
ids <- df$IdSensore
for (id in ids){
if (!(id %in% df_stations$IdSensore)){
print("sensor "{id}" not present in the dataset")
ids <- df$IdSensore
for (id in ids){
if (!(id %in% df_stations$IdSensore))
print("sensor "{id}" not present in the dataset")
ids <- df$IdSensore
for (id in ids){
if (!(id %in% df_stations$IdSensore))
print("sensor "+id+" not present in the dataset")
}
df <- left_join(df_stations,df, suffix = c("IdSensore"))
left_join(df, df_stations,by = "IdSensore")
df <- left_join(df,df_stations, by = "IdSensore")
View(df)
table(df$NomeTipoSensore)
table(df$DataStop)
unique(df$IdSensore)
colSums(unique(df$IdSensore))
length(unique(df$IdSensore))
df_senso
length(unique(df_stations$IdSensore))
df <- subset(df, -c(NomeStazione,Storico))
df <- subset(df, select = -c(NomeStazione,Storico))
table(df$Times)
data
data <- "12:34:25"
as.integer(as.POSIXct(data, format = "%H"))
as.character(as.POSIXct(data, format = "%H"))
as.character(format(as.POSIXct(data, format = "%H:%M:%S"), format = "%H"))
as.integer(format(as.POSIXct(data, format = "%H:%M:%S"), format = "%H"))
